import supertest from 'supertest';
import fs from 'fs/promises';
import path from 'path';
import app from '../../index';
import { Stats } from 'fs';

const request = supertest(app);

describe('GET /api/images', () => {
    it('responds with 400 if called without parameters', async (): Promise<void> => {
        const response = await request.get('/api/images');
        expect(response.status).toBe(400)
    });

    it('responds with 400 if called without height', async (): Promise<void> => {
        const response = await request.get('/api/images?file_name=test&width=200');
        expect(response.status).toBe(400)
    });

    it('responds with 404 if image does not exist', async (): Promise<void> => {
        const response = await request.get('/api/images?file_name=test&width=200&height=200');
        expect(response.status).toBe(404)
        expect(response.text).toBe("Image does not exist");
    });

    it('responds with 200 when called correctly', async (): Promise<void> => {
       const response = await request.get('/api/images?file_name=fjord&width=200&height=200');
       expect(response.status).toBe(200)
    });

    it('created a resized image successfully', (): void => {
        request
            .get('/api/images?file_name=fjord&width=200&height=200')
            .then(() => {
                fs.stat(path.resolve(__dirname, '../../../assets/resized_images/fjord200h200w.jpg')).then((fileStat: Stats) =>
                    expect(fileStat).not.toBeNull(),
                );
            });
    });
});

